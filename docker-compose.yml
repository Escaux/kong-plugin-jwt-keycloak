name: kong-plugin-jwt-keycloak

x-keycloak_image: &keycloak_image '${KEYCLOAK_IMAGE:-quay.io/keycloak/keycloak:15.0.2}'
x-httpbin-image: &httpbin_image '${HTTPBIN_IMAGE:-docker.io/kennethreitz/httpbin}'
x-pgadmin-image: &pgadmin_image '${PGADMIN_IMAGE:-docker.io/dpage/pgadmin4:7.5}'
x-postgres-image: &postgres_image '${POSTGRES_IMAGE:-docker.io/postgres:11.2-alpine}'
x-kong-build: &kong_build
  context: .
  args:
    KONG_VERSION: ${KONG_VERSION}
    PLUGIN_VERSION: ${PLUGIN_VERSION}

services:
  keycloak:
    image: *keycloak_image
    environment:
      KEYCLOAK_USER: ${KEYCLOAK_ADMIN_USER:-admin}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USER:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
    ports:
      - '${KEYCLOAK_PORT:-8080}:8080'
    command:
      - -b
      - 0.0.0.0
      - -Djboss.https.port=8543
    healthcheck:
      test: ["CMD", "curl", "-sf", "--max-time", "1", "127.0.0.1:${KEYCLOAK_PORT:-8080}"]
      interval: 1s
      timeout: 5s
      retries: 50
      start_period: 5s

  httpbin:
    image: *httpbin_image
    stop_grace_period: 1s
    command:
      - sh
      - -c
      - |
        apt-get update -y && apt-get install -y curl &&
        gunicorn -b 0.0.0.0:80 httpbin:app -k gevent
    ports:
      - '${HTTPBIN_PORT:-8093}:80'
    healthcheck:
      test: ["CMD", "curl", "-sf", "--max-time", "1", "127.0.0.1:80/status/200"]
      interval: 1s
      timeout: 5s
      retries: 50
      start_period: 5s

  pgadmin:
    image: *pgadmin_image
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@subdomain.domain
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_DEBUG: 'True'
      PGADMIN_LISTEN_PORT: ${PGADMIN_PORT:-5050}
      PGADMIN_LISTEN_ADDRESS: 0.0.0.0
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://127.0.0.1:${PGADMIN_PORT:-5050}/misc/ping"]
      interval: 1s
      timeout: 5s
      retries: 50
      start_period: 5s

  db:
    image: *postgres_image
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${KONG_DB_USER:-kong}
      POSTGRES_DB: ${KONG_DB_NAME:-kong}
      POSTGRES_PASSWORD: ${KONG_DB_PASSWORD:-kong}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 5s
      timeout: 20s
      retries: 20
      start_period: 10s

  db-migrate:
    build: *kong_build
    environment:
      KONG_DB_DATABASE: postgres
      KONG_PG_HOST: db
      KONG_PG_USER: ${KONG_DB_USER:-kong}
      KONG_PG_PASSWORD: ${KONG_DB_PASSWORD:-kong}
      KONG_PG_DATABASE: ${KONG_DB_NAME:-kong}
    command:
      - sh 
      - -c
      - 'kong migrations bootstrap --vv && kong migrations up -vv'
    depends_on:
      db:
        condition: service_healthy

  kong:
    build: *kong_build
    ports:
      - '${KONG_PORT:-8000}:8000'
      - '${KONG_ADMIN_PORT:-8001}:8001'
      - '${KONG_METRICS_PORT:-8002}:8002'
    environment:
      KONG_LOG_LEVEL: debug
      KONG_PROXY_ACCESS_LOG: /proxy_access.log
      KONG_ADMIN_ACCESS_LOG: /admin_access.log
      KONG_PROXY_ERROR_LOG: /proxy_error.log
      KONG_ADMIN_ERROR_LOG: /admin_error.log
      KONG_DATABASE: postgres
      KONG_PG_HOST: db
      KONG_PG_USER: ${KONG_DB_USER:-kong}
      KONG_PG_PASSWORD: ${KONG_DB_PASS:-kong}
      KONG_PG_DATABASE: ${KONG_DB_NAME:-kong}
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_NGINX_WORKER_PROCESSES": '1'
    healthcheck:
      test: ["CMD", "curl", "-sf", "--max-time", "1", "127.0.0.1:8001/metrics"]
      interval: 1s
      timeout: 5s
      retries: 50
      start_period: 5s
    stop_grace_period: 1s
    depends_on:
      db:
        condition: service_healthy
      db-migrate:
        condition: service_completed_successfully
      keycloak:
        condition: service_healthy
      httpbin:
        condition: service_healthy
      pgadmin:
        condition: service_healthy

  test-unit:
    build:
      <<: *kong_build
      dockerfile: tests/unit_tests/Dockerfile
    volumes:
      - .:/jwt-keycloak:ro

  test-integration:
    build:
      <<: *kong_build
      dockerfile: tests/integration_tests/Dockerfile
    volumes:
      - ./tests/integration_tests/tests:/tests:ro
    command: 'python -m unittest discover -s /tests -t /tests -p *.py -v'
    stop_grace_period: 1s
    depends_on:
      kong:
        condition: service_healthy
